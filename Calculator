import java.awt.*;  
import java.awt.event.*;  
/*********************************************/  
  
public class MyCalculator extends Frame  
{  
  
public boolean setClear=true;  
double number, memValue;  
char op;  
  
String digitButtonText[] = {"7", "8", "9", "4", "5", "6", "1", "2", "3", "0", "." };  
String operatorButtonText[] = {"/", "*", "-", "+", "=" };   
String specialButtonText[] = {"Backspc", "C" };  
  
MyDigitButton digitButton[]=new MyDigitButton[digitButtonText.length];  
MyOperatorButton operatorButton[]=new MyOperatorButton[operatorButtonText.length];  
MySpecialButton specialButton[]=new MySpecialButton[specialButtonText.length];  
  
Label displayLabel=new Label("0",Label.RIGHT);  
Label memLabel=new Label(" ",Label.RIGHT);  

  
final int FRAME_WIDTH=290,FRAME_HEIGHT=340;  
final int HEIGHT=30, WIDTH=30, H_SPACE=7,V_SPACE=10; // for botton
final int TOPN= 30, TOPM=60;  // side and top of the frame

/********/

MyCalculator(String frameText)
{  
super(frameText);  

  //display
int tempN=TOPN, n=TOPM;  
displayLabel.setBounds(tempN,n,226,HEIGHT);  
displayLabel.setBackground(Color.BLACK);  
displayLabel.setForeground(Color.WHITE );  
add(displayLabel);  
  
memLabel.setBounds(TOPN,TOPM+HEIGHT+ V_SPACE,WIDTH, HEIGHT);  
add(memLabel);  
  
// Co-ordinates for Special Buttons  

tempN=TOPN+1*(WIDTH+H_SPACE); n=TOPM+1*(HEIGHT+V_SPACE);  
for(int i=0;i<specialButton.length;i++)  
{  
specialButton[i]=new MySpecialButton(tempN,n,WIDTH*3,HEIGHT,specialButtonText[i], this);  
specialButton[i].setForeground(Color.RED);  
tempN=tempN+3*WIDTH+H_SPACE;  
}  
  
//for Digit Buttons  
int digitK=TOPN+WIDTH+H_SPACE;  
int digitJ=TOPM+2*(HEIGHT+V_SPACE);  
tempN=digitK;  n=digitJ;  
for(int i=0;i<digitButton.length;i++)  
{  
digitButton[i]=new MyDigitButton(tempN,n,WIDTH,HEIGHT,digitButtonText[i], this);  
digitButton[i].setForeground(Color.BLACK);  
tempN+=WIDTH+H_SPACE;  
if((i+1)%3==0){tempN=digitK; n+=HEIGHT+V_SPACE;}  
}  
  
// for Operator Buttons  
int eyN=digitK+2*(WIDTH+H_SPACE)+H_SPACE;  
int eyM=digitJ;  
tempN=eyN;  n=eyM;  
for(int i=0;i<operatorButton.length;i++)  
{  
tempN+=WIDTH+H_SPACE;  
operatorButton[i]=new MyOperatorButton(tempN,n,WIDTH,HEIGHT,operatorButtonText[i], this);  
operatorButton[i].setForeground(Color.BLACK);  
if((i+1)%2==0){tempN=eyN; n+=HEIGHT+V_SPACE;}  
}  
  
addWindowListener(new WindowAdapter()  
{  
public void windowClosing(WindowEvent ev)  
{System.exit(0);}  
});  
  
setLayout(null);  
setSize(FRAME_WIDTH,FRAME_HEIGHT);  
setVisible(true);  
}  

//////////////////////////////////  

static String getFormattedText(double temp)  
{  
String GText=""+temp;  
if(GText.lastIndexOf(".0")>0)  
    GText=GText.substring (0,GText.length()-2);  
return GText;  
}  

////////////////////////////////////////  

public static void main(String []args)  
{  
new MyCalculator("CalcuProject - Java");  
}  
}  
  
/************************/  
  
class MyDigitButton extends Button implements ActionListener  
{  
MyCalculator cal;  
  
//////////////////////////////  
MyDigitButton(int x,int y, int width,int height,String cap, MyCalculator clc)  
{  
super(cap);  
setBounds(x,y,width,height);  
this.cal=clc;  
this.cal.add(this);  
addActionListener(this);  
}  
////////////////////////////////////////////////  
static boolean isInString(String s, char ch)  
{  
for(int i=0; i<s.length();i++) if(s.charAt(i)==ch) return true;  
return false;  
}  
/////////////////////////////////////////////////  
public void actionPerformed(ActionEvent ev)  
{  
String tempText=((MyDigitButton)ev.getSource()).getLabel();  
  
if(tempText.equals("."))  
{  
 if(cal.setClear)   
    {cal.displayLabel.setText("0.");cal.setClear=false;}  
 else if(!isInString(cal.displayLabel.getText(),'.'))  
    cal.displayLabel.setText(cal.displayLabel.getText()+".");  
 return;  
}  
  
int index=0;  
try{  
        index=Integer.parseInt(tempText);  
    }catch(NumberFormatException e){return;}  
  
if (index==0 && cal.displayLabel.getText().equals("0")) return;  
  
if(cal.setClear)  
            {cal.displayLabel.setText(""+index);cal.setClear=false;}  
else  
    cal.displayLabel.setText(cal.displayLabel.getText()+index);  
}//actionPerformed  
}//class defination  
  
/********************************************/  
  
class MyOperatorButton extends Button implements ActionListener  
{  
MyCalculator calc;  
  
MyOperatorButton(int x,int y, int width,int height,String cap, MyCalculator clc)  
{  
super(cap);  
setBounds(x,y,width,height);  
this.calc=clc;  
this.calc.add(this);  
addActionListener(this);  
}  
///////////////////////  
public void actionPerformed(ActionEvent ev)  
{  
String opText=((MyOperatorButton)ev.getSource()).getLabel();  
  
calc.setClear=true;  
double temp=Double.parseDouble(calc.displayLabel.getText());  
  


if(!opText.equals("="))  
    {  
    calc.number=temp;  
    calc.op=opText.charAt(0);  
    return;  
    }  

switch(calc.op)  
{  
case '+':  
    temp=calc.number+temp;
    break;  
case '-':  
    temp=calc.number-temp;
    break;  
case '*':  
    temp=calc.number*temp;
    break;  

case '/':  
    try{temp=calc.number/temp;}  
        catch(ArithmeticException excp)  
                {calc.displayLabel.setText("Divide by 0.");
                 return;}  
    break;  
}//switch  
  
calc.displayLabel.setText(MyCalculator.getFormattedText(temp));  
} 
}
  
/*******************************/  

class MySpecialButton extends Button implements ActionListener  
{  
MyCalculator cl;  
  
MySpecialButton(int x,int y, int width,int height,String cap, MyCalculator clc)  
{  
super(cap);  
setBounds(x,y,width,height);  
this.cl=clc;  
this.cl.add(this);  
addActionListener(this);  
}  
//////////////////////  
static String backSpace(String s)  
{  
String Res="";  
for(int i=0; i<s.length()-1; i++) Res+=s.charAt(i);  
return Res;  
}  
  
///////////////////////////////////
public void actionPerformed(ActionEvent ev)  
{  
String opText=((MySpecialButton)ev.getSource()).getLabel();  
if(opText.equals("Backspc"))  
{  
String tempText=backSpace(cl.displayLabel.getText());  
if(tempText.equals(""))   
    cl.displayLabel.setText("0");  
else   
    cl.displayLabel.setText(tempText);  
return;  
}  
//for "C" button i.e. Reset  
if(opText.equals("C"))   
{  
cl.number=0.0; cl.op=' '; cl.memValue=0.0;  
cl.memLabel.setText(" ");  
}  
cl.displayLabel.setText("0");cl.setClear=true;  
}//actionPerformed  
}//class
